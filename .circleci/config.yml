version: 2.1


commands:
  destroy-environment:
    description: Destroy environment.
    steps:
      - run:
          name: Destroy environments
          when: on_fail
          command: |
            aws eks update-kubeconfig --name "weather-app-${CIRCLE_WORKFLOW_ID}"
            export KUBECONFIG=/root/.kube/config
            eksctl delete cluster --name="weather-app-${CIRCLE_WORKFLOW_ID}"

jobs:
  lint-server:
    docker:
      - image: circleci/node:14
    working_directory: /tmp/workspace
    steps:
      - checkout
      - restore_cache:
          keys: [ server-build ]
      - run:
          name: lint server
          command: |
            cd node3-weather-app/
            npm i
            npm install eslint --save-dev 
            npm run lint
      - save_cache:
          paths: [ node3-weather-app/node_modules ]
          key: server-build
  
  build-push-docker:
    machine: true
    steps:
      - checkout
      - run:
          name: build image
          command: |
            cd node3-weather-app/
            echo "$DOCKER_PASS" | docker login --username $DOCKER_USER --password-stdin
            docker build -t "omaradel153/weather-app" .
      - run:
          name: push image
          command: |
            echo "$DOCKER_PASS" | docker login --username $DOCKER_USER --password-stdin
            docker push "omaradel153/weather-app"

  create-kubernetes-cluster:
    docker:
      - image: alpine/k8s:1.15.12
    working_directory: /tmp/workspace
    steps:
      - checkout
      - run:
          name: get old cluster name
          command: |
            OLD_CLUSTER_ID=$(aws eks list-clusters --query 'clusters[0]')
            curl -H "Content-Type: text/plain" -H "token: e4232a90-f3c7-4bc6-8242-c0f33ab2b76d" --request PUT --data ${OLD_CLUSTER_ID} https://api.memstash.io/values/old_cluster
      - run:
          name: create kubernetes cluster
          command: |
            eksctl create cluster --name="weather-app-${CIRCLE_WORKFLOW_ID}" \
            --nodes-min=1 --nodes-max=2 \
            --node-type=t3.medium \
            --zones=us-east-1a,us-east-1b,us-east-1d


      - run:
          name: create kubernetes resources
          command: |
            aws eks update-kubeconfig --name "weather-app-${CIRCLE_WORKFLOW_ID}"
            export KUBECONFIG=/root/.kube/config
            kubectl create secret docker-registry regcred --docker-username=$DOCKER_USER --docker-password=$DOCKER_PASS --docker-email=omar.adelmohammed@gmail.com
            cd deploy
            kubectl apply -f weather-app
            kubectl rollout status deployment weather-app

      - run:
          name: add backend service ip to a file
          command: |
            BACKEND_URL=$(kubectl get services weather-app-service --output jsonpath='{.status.loadBalancer.ingress[0].hostname}')
            curl -H "Content-Type: text/plain" -H "token: e4232a90-f3c7-4bc6-8242-c0f33ab2b76d" --request PUT --data "http://${BACKEND_URL}:3000/" https://api.memstash.io/values/backend_ip

  smoke-test:
    docker:
      - image: alpine/k8s:1.15.12
    working_directory: /tmp/workspace
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: smoke test
          command: |
            BACKEND_URL=$(curl -s -H "token: e4232a90-f3c7-4bc6-8242-c0f33ab2b76d" --request GET https://api.memstash.io/values/backend_ip)
            sleep 3m
            if curl -s ${BACKEND_URL} | grep "Weather"
            then
              exit 0
            else
              echo "URL Does not work"
              exit 1
            fi
      - destroy-environment

  delete-old-cluster:
    docker:
      - image: alpine/k8s:1.15.12
    steps:
      - run:
          name: delete old clusters
          command: |
            aws eks update-kubeconfig --name "weather-app-${CIRCLE_WORKFLOW_ID}"
            export KUBECONFIG=/root/.kube/config
            cluster_name=$(curl -s -H "token: e4232a90-f3c7-4bc6-8242-c0f33ab2b76d" --request GET https://api.memstash.io/values/old_cluster)
            eksctl delete cluster --name=$cluster_name


workflows:
  default:
    jobs:
      - lint-server
      - build-push-docker:
          requires: [ lint-server ]
      - create-kubernetes-cluster:
          requires: [ build-push-docker ]
      - smoke-test:
          requires: [ create-kubernetes-cluster ]
      - delete-old-cluster:
          requires: [ smoke-test ]